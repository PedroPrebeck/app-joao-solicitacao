"""Streamlit entrypoint that configures the application shell."""
from __future__ import annotations

import streamlit as st

from app.components.forms import render_sidebar
from app.state import session_keys as keys
from app.utils.cache import load_dag40_cached
from app.utils.time_windows import current_time_window


def _handle_full_reset() -> None:
    if st.session_state.get(keys.FULL_RESET_FLAG, False):
        st.session_state.clear()
        st.session_state[keys.FULL_RESET_FLAG] = False
        st.rerun()


def main() -> None:
    st.set_page_config(
        page_title="Gera√ß√£o de Notas de Cobran√ßa - Painel de Solicita√ß√µes",
        page_icon="üßæ",
        layout="wide",
    )

    _handle_full_reset()

    st.title("Gera√ß√£o de Notas de Cobran√ßa - Painel de Solicita√ß√µes")
    st.caption("Solicite a gera√ß√£o de notas por UTD, TURMA e BASE, com valida√ß√µes operacionais de hor√°rio.")

    window = current_time_window()
    if window.after_10:
        st.info(
            "‚ö†Ô∏è **Ap√≥s 10:30 s√≥ ser√£o aceitos pedidos para amanh√£ ou fim de semana. Pedidos para a cadeia noturna s√≥ ser√£o aceitos at√© √†s 14:30**",
            icon="üïô",
        )

    render_sidebar()

    # Prime the DAG40 cache so the pages load quickly when the user navigates.
    try:
        load_dag40_cached()
    except Exception:
        st.warning("N√£o foi poss√≠vel carregar o cat√°logo DAG40 automaticamente. Verifique as credenciais do HANA.")

    st.divider()
    st.markdown(
        "Escolha uma das p√°ginas na barra lateral para **solicitar**, **acompanhar** ou **gerenciar** os pedidos."
    )


if __name__ == "__main__":
    main()
